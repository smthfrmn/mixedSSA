% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dist_update.R
\name{update_dist}
\alias{update_dist}
\title{Update movement distributions based on fitted models}
\usage{
update_dist(
  model,
  dist_name,
  beta_sl = NULL,
  beta_log_sl = NULL,
  beta_sl_sq = NULL,
  beta_log_sl_sq = NULL,
  beta_cos_ta = NULL,
  random_effects_var_name = NULL,
  interaction_var_name = NULL,
  quantiles = DEFAULT_QUANTILES
)
}
\arguments{
\item{model}{An iSSF model fitted using glmmTMB}

\item{dist_name}{The string name of the distribution for which you want to update parameters. Currently supported: 'gamma', 'exp', 'hnorm', 'lnorm', 'vonmises'.}

\item{beta_sl}{The string name of the step length coefficient, leave as NULL if not updating 'gamma' or 'exp' distributions.}

\item{beta_log_sl}{The string name of the log step length coefficient, leave as NULL if not updating 'gamma' or 'lnorm' distributions.}

\item{beta_sl_sq}{The string name of the step length squared coefficient, leave as NULL if not updating 'hnorm' distribution.}

\item{beta_log_sl_sq}{The string name of the log step length squared coefficient, leave as NULL if not updating 'lnorm' distribution.}

\item{beta_cos_ta}{The string name of the cos(turn angle) coefficient, leave as NULL if not updating 'vonmises' distribution.}

\item{random_effects_var_name}{The string name of the random effects var by which you want to update the distribution parameters.}

\item{interaction_var_name}{The string name of the variable in your model that is interacted with the movement variables. Can be a categorical or numerical variable.}

\item{quantiles}{A number vector containing the quantiles of the given interaction variable for which you want to calculate new distribution parameters. Must be between 0 and 1. Only relevant if the string passed to \code{interaction_var_name} points to a numeric variable.}
}
\value{
updatedDistributionParameters instance
}
\description{
Update movement distributions based on fitted models
}
\examples{
model <- glmmTMB(case_ ~ sl_ + log_sl_ + sl_:sex + log_sl_:sex, data = data)
updated_params <- update_dist(model,
  dist_name = "gamma",
  interaction_var_name = "sex",
  beta_sl = "sl_",
  beta_log_sl = "log_sl_"
)

model <- glmmTMB(case_ ~ cos_ta_ + cos_ta_:elevation, data = data)
updated_params <- update_dist(model,
  dist_name = "vonmises",
  interaction_var_name = "elevation",
  interaction_var_name = "elevation",
  beta_cos_ta = "cos_ta_"
)

model <- glmmTMB(case_ ~ cos_ta_ + cos_ta_:elevation + (0 + cos_ta_ | id), data = data)
updated_params <- update_dist(model,
  dist_name = "vonmises",
  interaction_var_name = "elevation",
  random_effects_var_name = "id",
  beta_cos_ta = "cos_ta_")
}
